<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lubanresearch.lubanmall.cart.infrastructure.persistence.db.mapper.CartItemEntityMapper">
  <resultMap id="BaseResultMap" type="com.lubanresearch.lubanmall.cart.infrastructure.persistence.db.entity.CartItemEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="cart_id" jdbcType="BIGINT" property="cartId" />
    <result column="product_price" jdbcType="DECIMAL" property="productPrice" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="product_num" jdbcType="INTEGER" property="productNum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, cart_id, product_price, create_time, product_id, product_num
  </sql>
  <select id="selectByExample" parameterType="com.lubanresearch.lubanmall.cart.infrastructure.persistence.db.query.condition.CartItemEntityQueryCondition" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lb_cart_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultType="com.lubanresearch.lubanmall.cart.infrastructure.persistence.db.entity.CartItemEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from lb_cart_item
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from lb_cart_item
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultType="com.lubanresearch.lubanmall.cart.infrastructure.persistence.db.entity.CartItemEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from lb_cart_item
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from lb_cart_item
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lubanresearch.lubanmall.cart.infrastructure.persistence.db.query.condition.CartItemEntityQueryCondition">
    delete from lb_cart_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lubanresearch.lubanmall.cart.infrastructure.persistence.db.entity.CartItemEntity">
    insert into lb_cart_item (id, cart_id, product_price, 
      create_time, product_id, product_num
      )
    values (#{id,jdbcType=BIGINT}, #{cartId,jdbcType=BIGINT}, #{productPrice,jdbcType=DECIMAL}, 
      #{createTime,jdbcType=TIMESTAMP}, #{productId,jdbcType=INTEGER}, #{productNum,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lubanresearch.lubanmall.cart.infrastructure.persistence.db.entity.CartItemEntity">
    insert into lb_cart_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('id')">
            id,
          </if>
          <if test="_parameter.hasSelective('cart_id')">
            cart_id,
          </if>
          <if test="_parameter.hasSelective('product_price')">
            product_price,
          </if>
          <if test="_parameter.hasSelective('create_time')">
            create_time,
          </if>
          <if test="_parameter.hasSelective('product_id')">
            product_id,
          </if>
          <if test="_parameter.hasSelective('product_num')">
            product_num,
          </if>
        </when>
        <otherwise>
          <if test="id != null">
            id,
          </if>
          <if test="cartId != null">
            cart_id,
          </if>
          <if test="productPrice != null">
            product_price,
          </if>
          <if test="createTime != null">
            create_time,
          </if>
          <if test="productId != null">
            product_id,
          </if>
          <if test="productNum != null">
            product_num,
          </if>
        </otherwise>
      </choose>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('id')">
            #{id,jdbcType=BIGINT},
          </if>
          <if test="_parameter.hasSelective('cart_id')">
            #{cartId,jdbcType=BIGINT},
          </if>
          <if test="_parameter.hasSelective('product_price')">
            #{productPrice,jdbcType=DECIMAL},
          </if>
          <if test="_parameter.hasSelective('create_time')">
            #{createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="_parameter.hasSelective('product_id')">
            #{productId,jdbcType=INTEGER},
          </if>
          <if test="_parameter.hasSelective('product_num')">
            #{productNum,jdbcType=INTEGER},
          </if>
        </when>
        <otherwise>
          <if test="id != null">
            #{id,jdbcType=BIGINT},
          </if>
          <if test="cartId != null">
            #{cartId,jdbcType=BIGINT},
          </if>
          <if test="productPrice != null">
            #{productPrice,jdbcType=DECIMAL},
          </if>
          <if test="createTime != null">
            #{createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="productId != null">
            #{productId,jdbcType=INTEGER},
          </if>
          <if test="productNum != null">
            #{productNum,jdbcType=INTEGER},
          </if>
        </otherwise>
      </choose>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lubanresearch.lubanmall.cart.infrastructure.persistence.db.query.condition.CartItemEntityQueryCondition" resultType="java.lang.Long">
    select count(*) from lb_cart_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update lb_cart_item
    <set>
      <choose>
        <when test="record.hasSelective()">
          <if test="record.hasSelective('id')">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.hasSelective('cart_id')">
            cart_id = #{record.cartId,jdbcType=BIGINT},
          </if>
          <if test="record.hasSelective('product_price')">
            product_price = #{record.productPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.hasSelective('create_time')">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.hasSelective('product_id')">
            product_id = #{record.productId,jdbcType=INTEGER},
          </if>
          <if test="record.hasSelective('product_num')">
            product_num = #{record.productNum,jdbcType=INTEGER},
          </if>
        </when>
        <otherwise>
          <if test="record.id != null">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.cartId != null">
            cart_id = #{record.cartId,jdbcType=BIGINT},
          </if>
          <if test="record.productPrice != null">
            product_price = #{record.productPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.productId != null">
            product_id = #{record.productId,jdbcType=INTEGER},
          </if>
          <if test="record.productNum != null">
            product_num = #{record.productNum,jdbcType=INTEGER},
          </if>
        </otherwise>
      </choose>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update lb_cart_item
    set id = #{record.id,jdbcType=BIGINT},
      cart_id = #{record.cartId,jdbcType=BIGINT},
      product_price = #{record.productPrice,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      product_id = #{record.productId,jdbcType=INTEGER},
      product_num = #{record.productNum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lubanresearch.lubanmall.cart.infrastructure.persistence.db.entity.CartItemEntity">
    update lb_cart_item
    <set>
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('cart_id')">
            cart_id = #{cartId,jdbcType=BIGINT},
          </if>
          <if test="_parameter.hasSelective('product_price')">
            product_price = #{productPrice,jdbcType=DECIMAL},
          </if>
          <if test="_parameter.hasSelective('create_time')">
            create_time = #{createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="_parameter.hasSelective('product_id')">
            product_id = #{productId,jdbcType=INTEGER},
          </if>
          <if test="_parameter.hasSelective('product_num')">
            product_num = #{productNum,jdbcType=INTEGER},
          </if>
        </when>
        <otherwise>
          <if test="cartId != null">
            cart_id = #{cartId,jdbcType=BIGINT},
          </if>
          <if test="productPrice != null">
            product_price = #{productPrice,jdbcType=DECIMAL},
          </if>
          <if test="createTime != null">
            create_time = #{createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="productId != null">
            product_id = #{productId,jdbcType=INTEGER},
          </if>
          <if test="productNum != null">
            product_num = #{productNum,jdbcType=INTEGER},
          </if>
        </otherwise>
      </choose>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lubanresearch.lubanmall.cart.infrastructure.persistence.db.entity.CartItemEntity">
    update lb_cart_item
    set cart_id = #{cartId,jdbcType=BIGINT},
      product_price = #{productPrice,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      product_id = #{productId,jdbcType=INTEGER},
      product_num = #{productNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="upsert" parameterType="com.lubanresearch.lubanmall.cart.infrastructure.persistence.db.entity.CartItemEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into lb_cart_item
    (id, cart_id, product_price, create_time, product_id, product_num)
    values
    (#{id,jdbcType=BIGINT}, #{cartId,jdbcType=BIGINT}, #{productPrice,jdbcType=DECIMAL}, 
      #{createTime,jdbcType=TIMESTAMP}, #{productId,jdbcType=INTEGER}, #{productNum,jdbcType=INTEGER}
      )
    on duplicate key update 
    id = #{id,jdbcType=BIGINT}, 
    cart_id = #{cartId,jdbcType=BIGINT}, 
    product_price = #{productPrice,jdbcType=DECIMAL}, 
    create_time = #{createTime,jdbcType=TIMESTAMP}, 
    product_id = #{productId,jdbcType=INTEGER}, 
    product_num = #{productNum,jdbcType=INTEGER}
  </insert>
  <insert id="upsertByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into lb_cart_item
    (id, cart_id, product_price, create_time, product_id, product_num)
    select
    #{record.id,jdbcType=BIGINT}, #{record.cartId,jdbcType=BIGINT}, #{record.productPrice,jdbcType=DECIMAL}, 
      #{record.createTime,jdbcType=TIMESTAMP}, #{record.productId,jdbcType=INTEGER}, 
      #{record.productNum,jdbcType=INTEGER}
    from dual where not exists
    (
    select 1 from lb_cart_item
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    )
    ;
    update lb_cart_item
    set
    id = #{record.id,jdbcType=BIGINT}, 
    cart_id = #{record.cartId,jdbcType=BIGINT}, 
    product_price = #{record.productPrice,jdbcType=DECIMAL}, 
    create_time = #{record.createTime,jdbcType=TIMESTAMP}, 
    product_id = #{record.productId,jdbcType=INTEGER}, 
    product_num = #{record.productNum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </insert>
  <insert id="upsertSelective" parameterType="com.lubanresearch.lubanmall.cart.infrastructure.persistence.db.entity.CartItemEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into lb_cart_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('id')">
            id,
          </if>
          <if test="_parameter.hasSelective('cart_id')">
            cart_id,
          </if>
          <if test="_parameter.hasSelective('product_price')">
            product_price,
          </if>
          <if test="_parameter.hasSelective('create_time')">
            create_time,
          </if>
          <if test="_parameter.hasSelective('product_id')">
            product_id,
          </if>
          <if test="_parameter.hasSelective('product_num')">
            product_num,
          </if>
        </when>
        <otherwise>
          <if test="id != null">
            id,
          </if>
          <if test="cartId != null">
            cart_id,
          </if>
          <if test="productPrice != null">
            product_price,
          </if>
          <if test="createTime != null">
            create_time,
          </if>
          <if test="productId != null">
            product_id,
          </if>
          <if test="productNum != null">
            product_num,
          </if>
        </otherwise>
      </choose>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('id')">
            #{id,jdbcType=BIGINT},
          </if>
          <if test="_parameter.hasSelective('cart_id')">
            #{cartId,jdbcType=BIGINT},
          </if>
          <if test="_parameter.hasSelective('product_price')">
            #{productPrice,jdbcType=DECIMAL},
          </if>
          <if test="_parameter.hasSelective('create_time')">
            #{createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="_parameter.hasSelective('product_id')">
            #{productId,jdbcType=INTEGER},
          </if>
          <if test="_parameter.hasSelective('product_num')">
            #{productNum,jdbcType=INTEGER},
          </if>
        </when>
        <otherwise>
          <if test="id != null">
            #{id,jdbcType=BIGINT},
          </if>
          <if test="cartId != null">
            #{cartId,jdbcType=BIGINT},
          </if>
          <if test="productPrice != null">
            #{productPrice,jdbcType=DECIMAL},
          </if>
          <if test="createTime != null">
            #{createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="productId != null">
            #{productId,jdbcType=INTEGER},
          </if>
          <if test="productNum != null">
            #{productNum,jdbcType=INTEGER},
          </if>
        </otherwise>
      </choose>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('id')">
            id = #{id,jdbcType=BIGINT},
          </if>
          <if test="_parameter.hasSelective('cart_id')">
            cart_id = #{cartId,jdbcType=BIGINT},
          </if>
          <if test="_parameter.hasSelective('product_price')">
            product_price = #{productPrice,jdbcType=DECIMAL},
          </if>
          <if test="_parameter.hasSelective('create_time')">
            create_time = #{createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="_parameter.hasSelective('product_id')">
            product_id = #{productId,jdbcType=INTEGER},
          </if>
          <if test="_parameter.hasSelective('product_num')">
            product_num = #{productNum,jdbcType=INTEGER},
          </if>
        </when>
        <otherwise>
          <if test="id != null">
            id = #{id,jdbcType=BIGINT},
          </if>
          <if test="cartId != null">
            cart_id = #{cartId,jdbcType=BIGINT},
          </if>
          <if test="productPrice != null">
            product_price = #{productPrice,jdbcType=DECIMAL},
          </if>
          <if test="createTime != null">
            create_time = #{createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="productId != null">
            product_id = #{productId,jdbcType=INTEGER},
          </if>
          <if test="productNum != null">
            product_num = #{productNum,jdbcType=INTEGER},
          </if>
        </otherwise>
      </choose>
    </trim>
  </insert>
  <insert id="upsertByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into lb_cart_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <choose>
        <when test="record.hasSelective()">
          <if test="record.hasSelective('id')">
            id,
          </if>
          <if test="record.hasSelective('cart_id')">
            cart_id,
          </if>
          <if test="record.hasSelective('product_price')">
            product_price,
          </if>
          <if test="record.hasSelective('create_time')">
            create_time,
          </if>
          <if test="record.hasSelective('product_id')">
            product_id,
          </if>
          <if test="record.hasSelective('product_num')">
            product_num,
          </if>
        </when>
        <otherwise>
          <if test="record.id != null">
            id,
          </if>
          <if test="record.cartId != null">
            cart_id,
          </if>
          <if test="record.productPrice != null">
            product_price,
          </if>
          <if test="record.createTime != null">
            create_time,
          </if>
          <if test="record.productId != null">
            product_id,
          </if>
          <if test="record.productNum != null">
            product_num,
          </if>
        </otherwise>
      </choose>
    </trim>
    select
    <trim suffixOverrides=",">
      <choose>
        <when test="record.hasSelective()">
          <if test="record.hasSelective('id')">
            #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.hasSelective('cart_id')">
            #{record.cartId,jdbcType=BIGINT},
          </if>
          <if test="record.hasSelective('product_price')">
            #{record.productPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.hasSelective('create_time')">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.hasSelective('product_id')">
            #{record.productId,jdbcType=INTEGER},
          </if>
          <if test="record.hasSelective('product_num')">
            #{record.productNum,jdbcType=INTEGER},
          </if>
        </when>
        <otherwise>
          <if test="record.id != null">
            #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.cartId != null">
            #{record.cartId,jdbcType=BIGINT},
          </if>
          <if test="record.productPrice != null">
            #{record.productPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.createTime != null">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.productId != null">
            #{record.productId,jdbcType=INTEGER},
          </if>
          <if test="record.productNum != null">
            #{record.productNum,jdbcType=INTEGER},
          </if>
        </otherwise>
      </choose>
    </trim>
    from dual where not exists
    (
    select 1 from lb_cart_item
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    )
    ;
    update lb_cart_item
    set
    <trim suffixOverrides=",">
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.cartId != null">
        cart_id = #{record.cartId,jdbcType=BIGINT},
      </if>
      <if test="record.productPrice != null">
        product_price = #{record.productPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.productNum != null">
        product_num = #{record.productNum,jdbcType=INTEGER},
      </if>
    </trim>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </insert>
</mapper>